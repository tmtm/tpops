#!/usr/local/bin/ruby
# $Id: tpops,v 1.68 2005/07/08 10:15:57 tommy Exp $
#
# Copyright (C) 2003-2005 TOMITA Masahiro
# tommy@tmtm.org
#

$:.unshift File.dirname($0)

require "optconfig"
require "log"
require "tpops"

$version = "0.7"

$options = {
  ["config", "f"]	=> true,
  "domain"		=> true,
  "fg"			=> nil,
  "debug"		=> nil,
  "version"		=> nil,
  "inetd"		=> nil,
  ["port", "p"]		=> [/(^|:)\d+$/, 110],
  ["user", "u"]		=> true,
  ["group", "g"]	=> true,
  "hostname"		=> [true, `uname -n`.chomp],
  "connection-keep-time"=> [true, 60*60],
  "command-timeout"	=> [true, 10*60],
  "access-log"		=> true,
  "error-log"		=> true,
  "syslog"		=> [true, "mail"],
  "auth-type"		=> [true, "passwd"],
  "mailbox-type"	=> [true, "maildir"],
  "parallel-type"	=> [true, "prefork"],
  "error-interval"	=> [true, 5],
  "pid-file"		=> true,
}

def usage()
  STDERR.puts <<EOS
TPOPS version #{$version}
Usage: tpops [options]
options:
  --access-log=filename
  --auth-type={passwd|mysql}
  --command-timeout=#
  --connection-keep-time=#
  --config=filename, -f filename
  --debug
  --domain=domainname
  --error-interval=#
  --error-log=filename
  --fg
  --group=grpname, -g grpname
  --hostname=hostname
  --inetd
  --maildir-extended={yes|no}
  --maildir-lock={yes|no}
  --maildir-uidl-convert={yes|no}
  --maildir-use-filesize={yes|no}
  --parallel-type={prefork|fork|thread}
  --pid-file=filename
  --port=#, -p #
  --syslog=name
  --user=username, -u username
  --version

[auth-type=passwd]
  --apop-passwd-file=filename
  --maildir=dirname

[auth-type=mysql]
  --mysql-auth-query=query
  --mysql-crypt-passwd={yes|no|crypt|sha}
  --mysql-db=dbname
  --mysql-passwd=password
  --mysql-server=hostname
  --mysql-user=username

[parallel-type=prefork]
  --max-idle=#
  --max-servers=#
  --max-use=#
  --min-servers=#

[parallel-type=fork]
  --max-servers=#

[parallel-type=thread]
  --max-servers=#

EOS
  exit 1
end

script_dir = File.dirname $0
Dir.glob("#{script_dir}/plugin/*.rb") do |f|
  load f
end

TPOPS.conf = OptConfig.new
TPOPS.conf.options = $options
begin
  n = TPOPS.conf.parse ARGV
  if TPOPS.conf["config"] then
    TPOPS.conf.file = TPOPS.conf["config"]
    n = TPOPS.conf.parse ARGV
  elsif File.exist? "#{script_dir}/tpops.conf"
    TPOPS.conf.file = "#{script_dir}/tpops.conf"
    n = TPOPS.conf.parse ARGV
  end
  if ARGV.size > n then
    usage
  end
rescue OptConfig::Error
  STDERR.puts $!
  usage
end

if TPOPS.conf["version"] then
  puts "TPOPS version #{$version}"
  exit
end

begin
  tpops = TPOPS.new
  tpops.load_config
  if TPOPS.conf["inetd"] then
    tpops.start_by_inetd
  else
    tpops.start
  end
rescue
  Log.err "#{$@[0]}: #{$!}"
  raise
end
